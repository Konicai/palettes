# This is a basic workflow that is manually triggered

name: Palette Generator

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: [workflow_dispatch, push]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  generate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    - name: Setup Python 
      uses: actions/setup-python@v4
      with:
        python-version: '3.11' 
    
    - name: Install Python Packages
      run: python -m pip install lief frida frida-tools
    
    - name: Download Bedrock Dedicated Server
      shell: bash
      run: |
        pwd
        SERVER="https://minecraft.azureedge.net/bin-linux/bedrock-server-1.19.50.02.zip"
        mkdir -p bds
        cd bds
        curl $SERVER -o serverpack.zip
        unzip -q serverpack.zip
        
    - name: Checkout For World File
      uses: actions/checkout@v3
      with:
        path: 'data'
        
    - name: Insert custom world into BDS
      run: |
        mkdir -p bds/worlds/'Bedrock level'
        cd bds/worlds/'Bedrock level'
        cp -r $GITHUB_WORKSPACE/data/world/** .
        ls
        
    - name: Clone pmmp/bds-modding-devkit
      uses: actions/checkout@v3
      with:
        repository: 'pmmp/bds-modding-devkit'
        submodules: 'recursive'
        path: 'devkit'
        
    - name: Compile Mod Environment
      run: |
        cd devkit
        ./scripts/setup "$GITHUB_WORKSPACE/bds"
        
    - name: Artifact Mod Binaries
      uses: actions/upload-artifact@v3
      with:
        name: mod_binaries
        path: 'devkit/code/**/build/*.so'

    - name: Run Modded Server
      run: |
        cd devkit
        ./start.sh &
        sleep 10
        kill $! # Kills the last process that was sent to the background
        
    - name: Artifact Mapping Files
      uses: actions/upload-artifact@v3
      with:
        name: mapping_files
        path: 'devkit/mapping_files/**'
        

